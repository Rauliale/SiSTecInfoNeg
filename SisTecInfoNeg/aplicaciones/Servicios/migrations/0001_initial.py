# Generated by Django 3.0.8 on 2020-10-06 00:52

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Personas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accesorio',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre Accesorio')),
            ],
            options={
                'verbose_name': 'Accesorio',
                'verbose_name_plural': 'Accesorio',
            },
        ),
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del autor')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido del autor')),
                ('estado', models.BooleanField(default=True, verbose_name='Autor activo/Autor no activo')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion')),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la categoria')),
                ('estado', models.BooleanField(default=True, verbose_name='categoria activada/categoria desactivada')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
            },
        ),
        migrations.CreateModel(
            name='Componente',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50, verbose_name='Componente')),
                ('borrado', models.BooleanField(default=False, verbose_name='borrado')),
            ],
        ),
        migrations.CreateModel(
            name='Equipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo de Servicio')),
                ('modelo', models.CharField(max_length=100, verbose_name='Modelo del equipo')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Personas.Cliente')),
                ('componente', models.ManyToManyField(blank=True, to='Servicios.Componente')),
            ],
            options={
                'verbose_name': 'Equipo',
                'verbose_name_plural': 'Equipos',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Estado del equipo')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estado',
            },
        ),
        migrations.CreateModel(
            name='Estado_Repuesto',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Estado del equipo')),
            ],
            options={
                'verbose_name': 'Estado_Repuesto',
                'verbose_name_plural': 'Estado_Repuesto',
            },
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Marca del equipo')),
            ],
            options={
                'verbose_name': 'Marca',
                'verbose_name_plural': 'Marca',
            },
        ),
        migrations.CreateModel(
            name='Prioridad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('prioridad', models.CharField(max_length=100, verbose_name='Prioridad')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Memoria',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('memoria', models.CharField(max_length=100, verbose_name='Tipo de memoria')),
                ('capacidad', models.CharField(max_length=100, verbose_name='Capacidad de memoria')),
            ],
            options={
                'verbose_name': 'Tipo_Memoria',
                'verbose_name_plural': 'Tipos_de_Memoria',
            },
        ),
        migrations.CreateModel(
            name='TipoComponente',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(max_length=50, verbose_name='Tipo de Componente')),
                ('borrado', models.BooleanField(default=False, verbose_name='borrado')),
            ],
        ),
        migrations.CreateModel(
            name='TipoEquipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del tipo de equipo')),
            ],
            options={
                'verbose_name': 'TipoEquipo',
                'verbose_name_plural': 'TipoEquipo',
            },
        ),
        migrations.CreateModel(
            name='UnidadMedida',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('unidad', models.CharField(max_length=50, verbose_name='Unidad')),
                ('cantidad', models.CharField(max_length=50, verbose_name='Cantidad')),
            ],
        ),
        migrations.CreateModel(
            name='Servicio_Tecnico',
            fields=[
                ('codServicio', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo de Servicio')),
                ('fechaIngreso', models.DateField(verbose_name='Fecha de Ingreso')),
                ('problema', models.CharField(max_length=120, verbose_name='Descripcion del problema')),
                ('contrase単a', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contrase単a del equipo')),
                ('fechaEntrega', models.DateField(blank=True, null=True, verbose_name='Fecha de Entrega')),
                ('presupuesto', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('trabajosRealizados', models.CharField(blank=True, max_length=120, null=True, verbose_name='Trabajos realizados sobre el equipo')),
                ('ubicacion', models.CharField(blank=True, max_length=30, null=True, verbose_name='Ubicacion o Estante en el que se encuentra')),
                ('accesorio', models.ManyToManyField(blank=True, to='Servicios.Accesorio')),
                ('equipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Servicios.Equipo')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Servicios.Estado')),
                ('prioridad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Servicios.Prioridad')),
            ],
            options={
                'verbose_name': 'Servicio_Tecnico',
                'verbose_name_plural': 'Servicios_Tecnicos',
                'ordering': ['codServicio'],
            },
        ),
        migrations.CreateModel(
            name='Repuesto',
            fields=[
                ('codRepuesto', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='Codigo de Repuesto')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del Repuesto')),
                ('descripcion', models.CharField(max_length=200, verbose_name='Descripcion del Repuesto')),
                ('stock', models.PositiveIntegerField()),
                ('entrega', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Servicios.Estado_Repuesto')),
                ('servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Servicios.Servicio_Tecnico')),
            ],
            options={
                'verbose_name': 'Repuesto',
                'verbose_name_plural': 'Repuestos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalServicio_Tecnico',
            fields=[
                ('codServicio', models.IntegerField(blank=True, db_index=True, verbose_name='Codigo de Servicio')),
                ('fechaIngreso', models.DateField(verbose_name='Fecha de Ingreso')),
                ('problema', models.CharField(max_length=120, verbose_name='Descripcion del problema')),
                ('contrase単a', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contrase単a del equipo')),
                ('fechaEntrega', models.DateField(blank=True, null=True, verbose_name='Fecha de Entrega')),
                ('presupuesto', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('trabajosRealizados', models.CharField(blank=True, max_length=120, null=True, verbose_name='Trabajos realizados sobre el equipo')),
                ('ubicacion', models.CharField(blank=True, max_length=30, null=True, verbose_name='Ubicacion o Estante en el que se encuentra')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('equipo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Servicios.Equipo')),
                ('estado', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Servicios.Estado')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('prioridad', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Servicios.Prioridad')),
            ],
            options={
                'verbose_name': 'historical Servicio_Tecnico',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEquipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, verbose_name='Codigo de Servicio')),
                ('modelo', models.CharField(max_length=100, verbose_name='Modelo del equipo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Personas.Cliente')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('marca', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Servicios.Marca')),
                ('tipoEquipo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Servicios.TipoEquipo')),
            ],
            options={
                'verbose_name': 'historical Equipo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='equipo',
            name='marca',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Servicios.Marca'),
        ),
        migrations.AddField(
            model_name='equipo',
            name='tipoEquipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Servicios.TipoEquipo'),
        ),
        migrations.AddField(
            model_name='componente',
            name='tipoComponente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Servicios.TipoComponente'),
        ),
        migrations.AddField(
            model_name='componente',
            name='unidad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Servicios.UnidadMedida'),
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=100, verbose_name='titulo del blog')),
                ('slug', models.CharField(max_length=100, verbose_name='slug del blog')),
                ('descripcion', models.CharField(max_length=200, verbose_name='descripcion del blog')),
                ('contenido', ckeditor.fields.RichTextField()),
                ('url1', models.URLField(blank=True, max_length=255, null=True, verbose_name='Referencias para resolver un problema')),
                ('url2', models.URLField(blank=True, max_length=255, null=True, verbose_name='Referencias para resolver un problema')),
                ('url3', models.URLField(blank=True, max_length=255, null=True, verbose_name='Referencias para resolver un problema')),
                ('imagen', models.URLField(blank=True, max_length=255, null=True)),
                ('estado', models.BooleanField(default=True, verbose_name='blog activo/blog no activo')),
                ('fecha_creacion', models.DateField(auto_now=True, verbose_name='Fecha de Creacion')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Servicios.Autor')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Servicios.Categoria')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
        ),
    ]
